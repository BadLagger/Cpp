#ifndef MODECFG_H
#define MODECFG_H

#include <QCheckBox>
#include <QRadioButton>
#include <QComboBox>
#include <QObject>
/*!
 * \brief  Класс для управления элементами графического интерфеса режима работы СУ 02
 ***********************************************************************************/
class ModeCfg : public QObject
{
    Q_OBJECT
public:
    /* Открытые списки */
    //! \brief Список возможных расположений устройств в режиме СУ 02
    enum Positions{
        Position_Empty = 0,     // "пустая" или неустановленная позиция
        Position_Collinear,     // соосно
        Position_Parallel,      // параллельно
        Position_Free,          // свободно
        Position_Max
    };
    /* Открытые структуры */
    //! \brief Структура с текущей конфигурацией
    typedef struct
    {
        bool      mode;          // true - режим СУ 02 включен
        Positions position;
    }MODECFG, *MODECFGptr;

    /* Открытые методы */
    /*!
     * \brief  Конструктор по умолчанию
     ***********************************************************************************/
    ModeCfg();
    /*!
     * \brief     Адаптер для задания внешнего чекбокса, который отвечает за вкл/выкл режима СУ 02
     * \param[in] указатель на объект чекбокса
     ***********************************************************************************/
    void            setUsageCheckbox(QCheckBox    *chbox);
    /*!
     * \brief     Адаптер для задания внешнего комбобокса в котором содержится список вариантов размещения устройств
     * \param[in] указатель на объект комбобокса
     ***********************************************************************************/
    void            setPositionCombox(QComboBox *cbox);
    /*!
     * \brief     Установка режима СУ 02 для графического интерфейса
     * \param[in] ссылка на структуру с конфигурацией
     ***********************************************************************************/
    void             setMode(MODECFG &cfg);
    /*!
     * \brief     Получение текущей конфигурации режима СУ 02 графического интерфейса
     * \return    структура с текущей конфигурацией
     ***********************************************************************************/
    ModeCfg::MODECFG getMode();
    /*!
     * \brief     Деактивировать графические элементы режима СУ 02
     ***********************************************************************************/
    void             setDisable();
    /*!
     * \brief     Активировать графические элементы режима СУ 02
     ***********************************************************************************/
    void             setEnable();

    /* Сигналы */
signals:
    /*!
     * \brief     Сигнал об установке нового варианта размещения СУ 02 в комбобоксе
     ***********************************************************************************/
    void          positionChangedSignal(Positions id);

private:
    /* Закрытые члены */
    QCheckBox    *usageCheckBox;   //! Указатель на чекбокс который отвечает за вкл/выкл режима СУ 02 (адаптер)
    QComboBox    *modeListCombox;  //! Указатель на комбобокс в котором содержится список вариантов размещения устройств в режиме СУ 02 (адаптер)
    MODECFG      currentMode;      //! Структура с текущими настройками режима СУ 02
};

#endif // MODECFG_H
