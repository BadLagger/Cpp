#ifndef MASTERSLAVEWIDGET_H
#define MASTERSLAVEWIDGET_H

#include "blockbtn.h"

//! \brief CSS виджета обычного блока
#define STYLE_SETTINGS \
    ":enabled {" \
    "background-color: rgb(0, 128, 64);" \
    "border-radius: 5px;" \
    "border: none;" \
    "}" \
    ":disabled {" \
    "background-color: rgb(143, 143, 143);" \
    "border-radius: 5px;" \
    "border: none;" \
    "}"
//! \brief CSS виджета выделеного блока
#define STYLE_SETTINGS_BOLD_BORDER \
    ":enabled {" \
    "background-color: rgb(0, 128, 64);" \
    "border: 3px solid #000000;" \
    "border-radius: 5px;" \
    "}" \
    ":disabled {" \
    "background-color: rgb(143, 143, 143);" \
    "border-radius: 5px;" \
    "border: none;" \
    "}"
/* Описание класса */
/*!
 * \brief Класс графического отображения блоков СУ 02
 ***********************************************************************************/
class MasterSlaveWidget : public QObject
{
    Q_OBJECT

public:
    /* Списки */
    //! \brief Список возможных расположений, которые поддерживает виджет
    enum Arrangment{
      Collinear = 0,    // соосное
      CollinearTurn,    // соосное развёрнуто
      Parallel,         // параллельное
      MaxArrangment
    };

    /* Открытые методы */
    /*!
     * \brief     Конструктор класса для графического отображения блоков СУ 02
     ***********************************************************************************/
    MasterSlaveWidget();
    /*!
     * \brief     Инициализация графического элемента (спец. кнопки) для СУ-М
     * \param[in] указатель на спец. кнопку
     ***********************************************************************************/
    void setMasterElement(BlockBtn *master);
    /*!
     * \brief     Инициализация графического элемента (спец. кнопки) для СУ-S
     * \param[in] указатель на спец. кнопку
     ***********************************************************************************/
    void setSlaveElement(BlockBtn *slave);
    /*!
     * \brief     Активация/дизактивация элемента
     * \param[in] true - активировать, false - дизактивировать
     ***********************************************************************************/
    void setEnable(bool state);
    /*!
     * \brief     Получение текущего расположения СУ 02 на виджете
     * \param[in] true - активировать, false - дизактивировать
     ***********************************************************************************/
    Arrangment getElementsArrangment() const;
    /*Сигналы */
signals:
    /*!
     * \brief     Сигнал выбора пользователем первого блока
     ***********************************************************************************/
    void block1ActivateSignal();
    /*!
     * \brief     Сигнал выбора пользователем второго блока
     ***********************************************************************************/
    void block2ActivateSignal();
    /* Открытые слоты */
public slots:
    /*!
     * \brief     Элементы СУ-М и СУ-S меняются местами (СЛОТ)
     ***********************************************************************************/
    void swapElementsSlot();
    /*!
     * \brief     Установка расположения СУ 02 на виджете(СЛОТ)
     * \param[in] идентификатор рассположения
     ***********************************************************************************/
    void setElementsArrangmentSlot(Arrangment arrangment);
    /*!
     * \brief     Выделить изображение первого блока
     ***********************************************************************************/
    void setBlock1Active();
    /*!
     * \brief     Выделить изображение второго блока
     ***********************************************************************************/
    void setBlock2Active();
    /*!
     * \brief     Снять выделение изображений обоих блоков
     ***********************************************************************************/
    void setBlocksInnactive();
    /* Закрытые члены */
private:
    Arrangment arrangment;  //! текущее расположение
    BlockBtn   *masterBtn;  //! Указатель на объект СУ-М (возможно полностью инкапсулировать ???)
    BlockBtn   *slaveBtn;   //! Указатель на объект СУ-S (возможно полностью инкапсулировать ???)
    bool       masterActive; //! Признак выделеного блока: true - выделен первый блок
};

#endif // MASTERSLAVEWIDGET_H
