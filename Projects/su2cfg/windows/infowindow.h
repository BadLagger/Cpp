#ifndef INFOWINDOW_H
#define INFOWINDOW_H

#include <QMainWindow>
#include <QTimer>
#include "protocols/bcp2.h"

//! \brief Значение таймера обновления окна в мс
#define INFOWINDOW_UPDATE_TIME (100)
//! \brief Значение мониторинга прихода сообщений в мс
#define INFOMONITORING_TIME (2000)

namespace Ui {
class InfoWindow;
}

/* Описание класса */
/*!
 * \brief Класс окна с дополнительной информацией
 ***********************************************************************************/
class InfoWindow : public QMainWindow
{
    Q_OBJECT

    /* Открытые методы */
public:
    /*!
     * \brief     Конструктор класса InfoWindow
     * \remark    Основные связи элементов ГУИ и логики приложения находятся здесь
     * \param[in] указатель на родительский виджет (необходимо задать MainWindow)
     ***********************************************************************************/
    explicit InfoWindow(QWidget *parent = nullptr);
    /*!
     * \brief     Деструктор класса InfoWindow
     ***********************************************************************************/
    ~InfoWindow();
    /*!
     * \brief     Включение мониторинга обновления информации
     * \remark    Если информация не будет обновлена с помощью слота \ref fillInfoSlot в течении
     *            \ref INFOMONITORING_TIME, то будет сгенерирован сигнал \ref noInfoSignal
     ***********************************************************************************/
    void startInfoMonitoring();
    /*!
     * \brief     Отключение мониторинга обновления информации
     ***********************************************************************************/
    void stopInfoMonitoring();
    /*!
     * \brief     Сброс всех локальных данных (все ифнормационные поля устанавлиются в "н/д"
     *            и отключается мониторинг обновления информации)
     ***********************************************************************************/
    void resetAllValues();
    /*!
     * \brief     Интерфейс для получения значения темпа решения на основе разницы в
     *            значении данных полученных с помощью \ref fillInfoSlot
     ***********************************************************************************/
    int  getSolutionTemp();
    /*!
     * \brief     Интерфейс для установки темпа решения
     * \param[in] значение темпа в герцах
     ***********************************************************************************/
    void setTemp(int temp);
    /* Сигналы */
signals:
    /*!
     * \brief     Сигнал сведельствующи, что в течении \ref INFOMONITORING_TIME не было
     *            обновлений информации с помощью \ref fillInfoSlot.
     * \remark    Будет сгенерирован только в том случе если был активирован монитор
     *            обновлений с помощью \ref startInfoMonitoring. Отключается с помощью
     *            \ref stopInfoMonitoring или \ref resetAllValues
     ***********************************************************************************/
    void noInfoSignal();
    /* Открытые слоты */
public slots:
    /*!
     * \brief     Слот для обновления информации по вектору состояния навигационного решения
     * \param[in] вектор состояни навигационного решения
     ***********************************************************************************/
    void fillInfoSlot(Bcp2::VECTORSTATE vector);
    /*!
     * \brief     Слот для обновления информации по угловому решению
     * \param[in] структура с угловой оринетацией
     ***********************************************************************************/
    void fillInfoSlot(Bcp2::ANGLEORIENTATION vector);
private:
    /* Закрытые члены */
    Ui::InfoWindow *ui;    //! указатель на форму окна
    QTimer *updateTimer;   //! таймер автообновления окна
    QTimer *monitorTimer;  //! таймер монитора обновления информации
    int    solutionTemp;   //! значение темпа решения полученного на основе разницы значений из вектора состояни
    bool   monitorRequest; //! true - был сгенерирован сигнал \ref noInfoSignal и значение темпа решения будет сброшено
    /* Закрытые методы */
    /*!
     * \brief     Получение значения гладусов в строковом виде по вещественному значению(ЗАКРЫТЫЙ МЕТОД)
     * \param[in] значение градусов в вещественном виде
     * \return    строка со значением градусов для вывода
     ***********************************************************************************/
    QString getGradStringFromDouble(double val);
};

#endif // INFOWINDOW_H
